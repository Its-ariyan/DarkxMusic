import asyncio
from pyrogram import filters
from pyrogram.types import Message
from pyrogram import Client
from pyrogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from modules.config import BOT_USERNAME, OWNER_ID
from pyrogram.errors import MessageNotModified

HOME_TEXT = """
 ú·¥á ü ü·¥è {}, ü•Ä
…™ ·¥Ä·¥ç s·¥ú·¥ò·¥á Ä “ì·¥Äs·¥õ …¥·¥áx·¥õ …¢·¥á…¥·¥á Ä·¥Ä·¥õ…™·¥è…¥ ·¥†·¥Ñ ·¥ò ü·¥Ä è·¥á Ä  ô·¥è·¥õ ·¥Ä…¥·¥Ö …¥·¥è  ü·¥Ä…¢ …™ss·¥ú·¥á ·¥°…™·¥õ ú  ô·¥ás·¥õ s·¥è·¥ú…¥·¥Ö «´·¥ú·¥Ä ü…™·¥õ è “ì·¥è Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥òs
…™“ì  è·¥è·¥ú  ú·¥Ä·¥†·¥á ·¥Ä…¥ è «´·¥ú·¥ás·¥õ…™·¥è…¥s ·¥õ ú·¥á…¥
·¥Ö·¥ç ·¥õ·¥è ·¥ç è ·¥è·¥°…¥·¥á Ä […™·¥õs-·¥Ä Ä…™ è·¥Ä…¥](https://t.me/Prince_ariyan_143)...
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ**"""

SUDO_X = """
ü•Ä s·¥ú·¥Ö·¥è ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös 
‡πè /gcast :  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è s·¥á Ä·¥†·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õs ·¥è“ì ·¥õ ú·¥á  ô·¥è·¥õ.
‡πè /eval or /sh :  Ä·¥ú…¥s ·¥õ ú·¥á …¢…™·¥†·¥á…¥ ·¥Ñ·¥è·¥Ö·¥á ·¥è…¥ ·¥õ ú·¥á  ô·¥è·¥õ's ·¥õ·¥á Ä·¥ç…™…¥·¥Ä ü.
‡πè /rmw : ·¥Ñ ü·¥á·¥Ä Äs ·¥Ä ü ü ·¥õ ú·¥á ·¥Ñ·¥Ä·¥Ñ ú·¥á ·¥© ú·¥è·¥õ·¥ès ·¥è…¥ ·¥õ ú·¥á  ô·¥è·¥õ's s·¥á Ä·¥†·¥á Ä.
‡πè /rmp : ·¥Ñ ü·¥á·¥Ä Äs ·¥õ ú·¥á  Ä·¥Ä·¥° “ì…™ ü·¥ás ·¥è“ì ·¥õ ú·¥á  ô·¥è·¥õ.
‡πè /rmd : ·¥Ñ ü·¥á·¥Ä Äs ·¥õ ú·¥á ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö·¥á·¥Ö “ì…™ ü·¥ás ·¥è…¥ ·¥õ ú·¥á  ô·¥è·¥õ's s·¥á Ä·¥†·¥á Ä.
"""





#USERS_CMD = """



MORE_TEXT = """
 ú·¥á è {},
 ·¥õ ú…™s …™s Àπs·¥Ä…¥·¥ã…™ ·¥ç·¥ús…™·¥ÑÀº ü´ß,
·¥Ä…¥ ·¥è·¥©·¥á…¥ s·¥è·¥ú Ä·¥Ñ·¥á ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥© ·¥ç·¥ús…™·¥Ñ  ô·¥è·¥õ.

 ú·¥á Ä·¥á …™s ·¥ç è s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á : […¢…™·¥õ ú·¥ú ô](https://github.com/Its-ariyan/Dark-Music)

·¥Ö·¥è…¥'·¥õ “ì·¥è Ä…¢·¥á·¥õ ·¥õ·¥è …¢…™·¥†·¥á ·¥Ä s·¥õ·¥Ä Ä ·¥õ·¥è ·¥õ ú·¥á  Ä·¥á·¥ò·¥ès…™·¥õ·¥è Ä è... ‚ú®
 Ä·¥á·¥ò·¥è Ä·¥õ  ô·¥ú…¢s ·¥Ä·¥õ [s·¥ú·¥ò·¥ò·¥è Ä·¥õ …¢ Ä·¥è·¥ú·¥ò](https://t.me/ariyan_discus)
"""

USERS_CMD = """·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös …™…¥ ·¥ç·¥ús…™·¥Ñ  ô·¥è·¥õ :
‡πè /play : s·¥õ·¥Ä Ä·¥õs s·¥õ Ä·¥á·¥Ä·¥ç…™…¥…¢ ·¥õ ú·¥á  Ä·¥á«´·¥ú·¥ás·¥õ·¥á·¥Ö ·¥õ Ä·¥Ä·¥Ñ·¥ã ·¥è…¥ ·¥†…™·¥Ö·¥á·¥è·¥Ñ ú·¥Ä·¥õ.
‡πè /pause : ·¥©·¥Ä·¥ús·¥á ·¥õ ú·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥© ü·¥Ä è…™…¥…¢ s·¥õ Ä·¥á·¥Ä·¥ç.
‡πè /resume :  Ä·¥ás·¥ú·¥ç·¥á ·¥õ ú·¥á ·¥©·¥Ä·¥ús·¥á·¥Ö s·¥õ Ä·¥á·¥Ä·¥ç.
‡πè /skip : s·¥ã…™·¥© ·¥õ ú·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥© ü·¥Ä è…™…¥…¢ s·¥õ Ä·¥á·¥Ä·¥ç ·¥Ä…¥·¥Ö s·¥õ·¥Ä Ä·¥õ s·¥õ Ä·¥á·¥Ä·¥ç…™…¥…¢ ·¥õ ú·¥á …¥·¥áx·¥õ ·¥õ Ä·¥Ä·¥Ñ·¥ã …™…¥ «´·¥ú·¥á·¥ú·¥á.
‡πè /end : ·¥Ñ ü·¥á·¥Ä Äs ·¥õ ú·¥á «´·¥ú·¥á·¥ú·¥á ·¥Ä…¥·¥Ö ·¥á…¥·¥Ö ·¥õ ú·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥© ü·¥Ä è…™…¥…¢ s·¥õ Ä·¥á·¥Ä·¥ç.
‡πè /ping : s ú·¥è·¥° ·¥õ ú·¥á ·¥©…™…¥…¢ ·¥Ä…¥·¥Ö s ès·¥õ·¥á·¥ç s·¥õ·¥Ä·¥õs ·¥è“ì ·¥õ ú·¥á  ô·¥è·¥õ.
‡πè /join :  Ä·¥á«´·¥ú·¥ás·¥õ ·¥õ ú·¥á ·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥õ·¥è ·¥ä·¥è…™…¥  è·¥è·¥ú Ä ·¥Ñ ú·¥Ä·¥õ.
‡πè /id : s·¥á…¥·¥Ös  è·¥è·¥ú ·¥õ ú·¥á …™·¥Ö ·¥è“ì ·¥õ ú·¥á ·¥ús·¥á Ä ·¥è Ä  Ä·¥á·¥© ü…™·¥á·¥Ö “ì…™ ü·¥á.
‡πè /song : ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ös ·¥õ ú·¥á  Ä·¥á«´·¥ú·¥ás·¥õ·¥á·¥Ö s·¥è…¥…¢ ·¥Ä…¥·¥Ö s·¥á…¥·¥Ö …™·¥õ ·¥õ·¥è  è·¥è·¥ú.
‡πè /search : s·¥á·¥Ä Ä·¥Ñ·¥ás ·¥õ ú·¥á …¢…™·¥†·¥á…¥ «´·¥ú·¥á Ä è ·¥è…¥  è·¥è·¥ú·¥õ·¥ú ô·¥á ·¥Ä…¥·¥Ö s ú·¥è·¥°s  è·¥è·¥ú ·¥õ ú·¥á  Ä·¥ás·¥ú ü·¥õ.

"""

@Client.on_callback_query()
async def cb_handler(client: Client, query: CallbackQuery):
    if query.data=="home":
        buttons = [
        [
            InlineKeyboardButton("‚ûï ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ‚ûï", url=f"https://t.me/{BOT_USERNAME}?startgroup=true")
        ],
        [
            InlineKeyboardButton("ü•Ä s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url="https://t.me/ariyan_discus"),
            InlineKeyboardButton("üè° ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás", url="https://t.me/ariyan_server")
        ],
        [
            InlineKeyboardButton("üî•  ú·¥á ü·¥ò & ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös üî•", callback_data="help_cmd")
        ]
   
     ]
        reply_markup = InlineKeyboardMarkup(buttons)
        try:
            await query.edit_message_text(
                HOME_TEXT,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass


    elif query.data=="help_cmd":
        get_me = await client.get_me()
        USERNAME = get_me.username
        buttons = [
                [
                    InlineKeyboardButton(
                        "ü•Ä s·¥ú·¥Ö·¥è ·¥Ñ·¥ç·¥Ö ", callback_data="sudo_info"),
                    InlineKeyboardButton(
                        "üçÉ ·¥ús·¥á Äs ·¥Ñ·¥ç·¥Ö", callback_data="users_cmd"),
                ],
                [
                    InlineKeyboardButton(
                        "üè°  ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä", url=f"tg://user?id={OWNER_ID}"),
                    InlineKeyboardButton(
                        "üîπ s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á", callback_data="more_info")
                ],
                [
                    InlineKeyboardButton("‚ü≤  ô·¥Ä·¥Ñ·¥ã ‚ü≥", callback_data="home")
                ]
           ]
        reply_markup = InlineKeyboardMarkup(buttons)
        try:
            await query.edit_message_text(
                HOME_TEXT.format(query.from_user.first_name, query.from_user.id),
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass


    elif query.data=="more_info":
        buttons =  [
                [
                    InlineKeyboardButton("‚ü≤  ô·¥Ä·¥Ñ·¥ã ‚ü≥", callback_data="help_cmd")
                ]
           ]
        reply_markup = InlineKeyboardMarkup(buttons)
        try:
            await query.edit_message_text(
                MORE_TEXT.format(query.from_user.first_name, query.from_user.id),
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass  


    elif query.data=="users_cmd":
        buttons =  [              
                [
                    InlineKeyboardButton("‚ü≤  ô·¥Ä·¥Ñ·¥ã ‚ü≥", callback_data="help_cmd")
                ]
           ]
        reply_markup = InlineKeyboardMarkup(buttons)
        try:
            await query.edit_message_text(
                USERS_CMD.format(query.from_user.first_name, query.from_user.id),
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass


    elif query.data=="sudo_info":
        buttons =  [
                [
                    InlineKeyboardButton("‚ü≤  ô·¥Ä·¥Ñ·¥ã ‚ü≥", callback_data="help_cmd")
                ]
           ]
        reply_markup = InlineKeyboardMarkup(buttons)
        try:
            await query.edit_message_text(
                SUDO_X.format(query.from_user.first_name, query.from_user.id),
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass
 
    elif query.data=="close_play":
        try:
            await query.message.delete()
            await query.message.reply_to_message.delete()
        except:
            pass  
 
